# -*- coding: utf-8 -*-
"""load_predict.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TECgTg6GK2dhm_GEmmkl51cAWXlz7o7R
"""

# Import necessary libraries
import pandas as pd
import numpy as np
import yfinance as yf
from sklearn.cluster import KMeans
from sklearn.preprocessing import MinMaxScaler
import pickle
import warnings
warnings.filterwarnings('ignore')

# load data
data = pd.read_csv('/content/data.csv')

data.set_index('Ticker',inplace=True)

# load model
model = pickle.load(open('/content/model.pkl','rb'))

# Feature selection
corr_matrix = data.corr()
features = ['Score']
selected_features = []
for feature in features:
    similar_features = corr_matrix[feature][corr_matrix[feature] > 0.8].index.tolist()
    if feature in similar_features:
        similar_features.remove(feature)
    if similar_features not in selected_features:
        selected_features.append([feature] + similar_features)


# Cluster analysis
X = data[selected_features[0]]
# kmeans = KMeans(n_clusters=10, random_state=42).fit(X)
cluster_labels = model.labels_
clustered_data = pd.concat([data[selected_features[0]].reset_index(), pd.Series(cluster_labels, name='Cluster')], axis=1)

# Stock ranking
clustered_data['Rank'] = clustered_data.groupby('Cluster')['Score'].rank(method='min', ascending=True)
top10 = clustered_data[clustered_data['Rank'] <= 10].sort_values(['Cluster', 'Rank'])

# printing top 10 stocks
print(top10.head(10))

